v1.0.0.9
- made sure, that new local extra files with the type -short and -featurette are skipped during compare

v1.0.0.8
- Corrected a bug, where the stored token would be invalid, if more than one server was part of the home
- Removed option to clear locally stored token, since that's no longer used
- Added directory named: "lost+found" to the default ignore list
- Added a new setting, allowing you to get the results written out to a txt file named FindUnmatched.txt, located in the first filepath of the library

V1.0.0.7
- Main menu icons now reflect the type of section
- Local extras will now be ignored

V1.0.0.6
- Don't treat a blank token as valid.

V1.0.0.5
- Moved away from using the framework, when requesting large amount of data from the PMS
- Removed HOST setting from the preferences....Not needed anymore

V1.0.0.4
- Regression fixed....It was possible to select an audio section, even though those ain't supported yet

V1.0.0.3
- Fixed an error I made, causing the bundle to not work...sorry....

V1.0.0.2
- Fixed issue, causing unmatched items to show up twice

V1.0.0.1
- Github fooled me a bit here...
  Fixed that

v1.0.0.0
- Added support for Plex Home mode
	(When running in Home mode, you must configure authentication towards plex.tv from the settings)

v0.0.1.29
-Replaced urllib.urlopen() with HTTP.Request() from the plugin framework.

v0.0.1.28
-Resetting the default extensions is now done with one url request instead of several.
-Files that start with a dot are no longer ignored by default. There are some movies that start with a dot.
-There is now an option to ignore files that start with a dot in the Prefs.
-Added .plexignore to the default ignored files.

v0.0.1.27
-Check for a valid host setting. If the host is unreachable, reset to localhost:32400
-Sometimes the web client will reload the scanStatus and if the scanner was not running it would trigger a new scan. It now presents a menu to view the last results or go to the main menu.
-Moved ignored files checking from findUnmatchedFiles() to listTree() to put it alongside checking .plexignore. This helps optimize the code a bit.
-Cleaned up some unnecessary code.
-bScanStatusCount will now only count valid files in listTree(). Allows a more accurate count of the expected number of files from the database.
-Fixed a typo in DefaultPrefs.json and cleaned it up a bit.

v0.0.1.26
-Changed icon to follow the std. template from Plex

v0.0.1.25
-Fixed issue where is media is in a root folder ex. N:\ it would falsely think it was in the ignored directories list. Fixes issue #60
-Ignored dirs is now case insensitive.

v0.0.1.24
-Opps. If Dict['PMS_URL'] was not set. The plugin wouldn't run.

v0.0.1.23
-Global var myPathList has been done away with. The paths are passed down through the functions to scanFiles(). It was occasionally getting reset by Plex randomly calling MainMenu(). Fixes issue #56
-Fix detection of an empty filesystem. It was causing an occasional crash.
-Database files in the log no longer encoded for easier reading.
-Use Prefs[] framework instead of setting global vars.
-Prefs checking is now done in ValidatePrefs()
-getPrefs() is now logPrefs() as it only logs the current prefs.
-Global var PMS_URL is now using the Dict[] framework instead of being a global var.

v0.0.1.22
-Allow users to reset the media extensions to the defaults

v0.0.1.21
-.plexignore files are now used. This can be enabled/disabled in the prefs. Fixes issue #51
-Clicking on and error message will now correctly reset the program and return to the main menu.
-Option to scan all extensions except ignored is now a checkbox.
-Moved listTree() to just below scanFiles() for easier readability.


V0.0.1.20
-Renamed function compare() to results() to reflect what is actually done.
-File scanner now give an approximate total while scanning.
-Fix false positives when library contains multiple locations. Issue #49
-Hopefully fix false message that the filesystem is empty.
-Cut down on the number of global variables.

V0.0.1.19
-Change backgroundScan to use time.clock() instead of scanCounter when checking status to force new status instead of a cached page. Fixes not always getting new results.
-If the scan is complete before the initial timeout go straight to the results.
-Added the following extensions to the default ignore extension list: .gif, *.txt, *.rtf, *.m3u, *.rar, *.sfv, *.md5, *.ico, *.doc, *.zip
-Hopefully catch a weird rare crash at line 104 where the file list comes up empty and dumps to an internal error.

V0.0.1.18
-Matches are now case insensitive.
-Prefs are now reloaded in findUnmatchedFiles() to make sure we have any changes.
-Can now set valid extensions to ALL to list all files except those in the ignore lists.

V0.0.1.17
-Added code for ignoring dirs. Issue #45
-Fixed wildcards for ignoring files
-Changed preference variable names to fit what they are for

V0.0.1.16
- The scanning now takes place in a background thread with the user checking the status. (Fix for Issue #16: Timeout when searching very large sections )
- Notify to user if the file scanner comes back empty

V0.0.1.15:
srazer checked in a fix for issue 39
(Click on a found result)

V0.0.1.14:
srazer checked in a fix for issue 37
(If a media filename contains a comma, it will get detected as unmatched)

srazer checked in a fix for issue 40
(Files on a network share)

V0.0.1.13:

Fixed problem, where a madia spawing more than one file, was detected as unmatched
Optimized speed as well

V0.0.1.12:

Fixed a regression on windows with backslash vs. double backslash

V0.0.1.11:

Fixed more Unicode problems

V0.0.1.10:

Fixed issue where a section was spawning more than one file-path

V0.0.1.9:

Added versionnumber to both Logfile as well as GUI
Added platform to logging
fixed backslash getting escaped on windows platform

V0.0.1.8:

Fixed a brainfart from my part, cutting off the last character in the html reporting

V0.0.1.7:

As a partial workaround for a channel timeout of the API, when scanning a HUGE section, I divided the search into 3 different steps.
Still not perfect, and will still timeout for some people, but as said, only with either a HUGE section, a non-optimized database or a slow file-system.
I'm still scratching my head here on how-to solve this, but haven't given up yet.

Fixed errors with strange characters
Fixed issue when running on windows @ the same time...
(Looks like Unicode, that I hate, is also my friend here)


V0.0.1.6:

Added Unicode to Music sections
Fixed an issue with detection of TV-Shows

V0.0.1.5:

Unicode enabled, or tried to, for sections as well as filenames for movie and series

V0.0.1.4:

Added first attempt of a gui presentation of the end result

V0.0.1.3:

Added Music section as a valid search section

V0.0.1.2:

Fixed issue with result showing multiple times

V0.0.1.1:

Fixed multipath in sections
Fixed problem with movie sections vs. TV-Series section

V0.0.1.0:

Modulized a bit more
Updated readme
Added changelog
Added version file


V0.0.0.9:

Initial version
